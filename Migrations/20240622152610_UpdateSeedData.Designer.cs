// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2024_airbnb_herkansing.Data;

#nullable disable

namespace _2024_airbnb_herkansing.Migrations
{
    [DbContext(typeof(_2024_airbnb_herkansingContext))]
    [Migration("20240622152610_UpdateSeedData")]
    partial class UpdateSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_2024_airbnb_herkansing.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice@example.com",
                            FirstName = "Alice",
                            LastName = "Wonderland"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bob@example.com",
                            FirstName = "Bob",
                            LastName = "Builder"
                        },
                        new
                        {
                            Id = 3,
                            Email = "charlie@example.com",
                            FirstName = "Charlie",
                            LastName = "Chocolate"
                        });
                });

            modelBuilder.Entity("_2024_airbnb_herkansing.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCover")
                        .HasColumnType("bit");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCover = false,
                            Url = "https://images.pexels.com/photos/4626807/pexels-photo-4626807.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 2,
                            IsCover = false,
                            Url = "https://images.pexels.com/photos/4588043/pexels-photo-4588043.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 3,
                            IsCover = false,
                            Url = "https://images.pexels.com/photos/3789871/pexels-photo-3789871.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 4,
                            IsCover = false,
                            Url = "https://images.pexels.com/photos/3687061/pexels-photo-3687061.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 5,
                            IsCover = false,
                            Url = "https://images.pexels.com/photos/4099585/pexels-photo-4099585.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 6,
                            IsCover = true,
                            LocationId = 1,
                            Url = "https://images.pexels.com/photos/2998307/pexels-photo-2998307.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 7,
                            IsCover = true,
                            LocationId = 2,
                            Url = "https://images.pexels.com/photos/1459493/pexels-photo-1459493.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 8,
                            IsCover = true,
                            LocationId = 3,
                            Url = "https://images.pexels.com/photos/279746/pexels-photo-279746.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 9,
                            IsCover = true,
                            LocationId = 4,
                            Url = "https://images.pexels.com/photos/2102587/pexels-photo-2102587.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 10,
                            IsCover = true,
                            LocationId = 5,
                            Url = "https://images.pexels.com/photos/2118125/pexels-photo-2118125.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 11,
                            IsCover = true,
                            LocationId = 6,
                            Url = "https://images.pexels.com/photos/4325436/pexels-photo-4325436.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 12,
                            IsCover = true,
                            LocationId = 7,
                            Url = "https://images.pexels.com/photos/2433061/pexels-photo-2433061.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 13,
                            IsCover = true,
                            LocationId = 8,
                            Url = "https://images.pexels.com/photos/1759895/pexels-photo-1759895.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 14,
                            IsCover = true,
                            LocationId = 9,
                            Url = "https://images.pexels.com/photos/1282315/pexels-photo-1282315.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 15,
                            IsCover = true,
                            LocationId = 10,
                            Url = "https://images.pexels.com/photos/205827/pexels-photo-205827.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 16,
                            IsCover = false,
                            LocationId = 1,
                            Url = "https://images.pexels.com/photos/2050994/pexels-photo-2050994.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 17,
                            IsCover = false,
                            LocationId = 1,
                            Url = "https://images.pexels.com/photos/2179213/pexels-photo-2179213.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 18,
                            IsCover = false,
                            LocationId = 5,
                            Url = "https://images.pexels.com/photos/2194262/pexels-photo-2194262.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 19,
                            IsCover = false,
                            LocationId = 5,
                            Url = "https://images.pexels.com/photos/3117091/pexels-photo-3117091.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 20,
                            IsCover = false,
                            LocationId = 9,
                            Url = "https://images.pexels.com/photos/39866/pexels-photo-39866.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 21,
                            IsCover = false,
                            LocationId = 6,
                            Url = "https://images.pexels.com/photos/235647/pexels-photo-235647.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 22,
                            IsCover = false,
                            LocationId = 8,
                            Url = "https://images.pexels.com/photos/1105766/pexels-photo-1105766.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        },
                        new
                        {
                            Id = 23,
                            IsCover = false,
                            LocationId = 10,
                            Url = "https://images.pexels.com/photos/1961457/pexels-photo-1961457.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"
                        });
                });

            modelBuilder.Entity("_2024_airbnb_herkansing.Models.Landlord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("AvatarId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId")
                        .IsUnique()
                        .HasFilter("[AvatarId] IS NOT NULL");

                    b.ToTable("Landlord");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 30,
                            AvatarId = 1,
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            Age = 25,
                            AvatarId = 2,
                            FirstName = "Jane",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            Age = 40,
                            AvatarId = 3,
                            FirstName = "Jim",
                            LastName = "Bean"
                        },
                        new
                        {
                            Id = 4,
                            Age = 35,
                            AvatarId = 4,
                            FirstName = "Jill",
                            LastName = "Hill"
                        },
                        new
                        {
                            Id = 5,
                            Age = 28,
                            AvatarId = 5,
                            FirstName = "Jack",
                            LastName = "Black"
                        });
                });

            modelBuilder.Entity("_2024_airbnb_herkansing.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Features")
                        .HasColumnType("int");

                    b.Property<int>("LandlordId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<float>("PricePerDay")
                        .HasColumnType("real");

                    b.Property<int>("Rooms")
                        .HasColumnType("int");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LandlordId");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Modern apartment in the city center",
                            Features = 12,
                            LandlordId = 1,
                            NumberOfGuests = 4,
                            PricePerDay = 80f,
                            Rooms = 2,
                            SubTitle = "Close to all amenities",
                            Title = "City Center Apartment",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Cozy cottage in the countryside",
                            Features = 34,
                            LandlordId = 2,
                            NumberOfGuests = 6,
                            PricePerDay = 120f,
                            Rooms = 3,
                            SubTitle = "Peaceful and quiet",
                            Title = "Countryside Cottage",
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Beachfront villa with stunning views",
                            Features = 20,
                            LandlordId = 3,
                            NumberOfGuests = 8,
                            PricePerDay = 250f,
                            Rooms = 4,
                            SubTitle = "Steps from the beach",
                            Title = "Beachfront Villa",
                            Type = 5
                        },
                        new
                        {
                            Id = 4,
                            Description = "Single room in a shared house",
                            Features = 8,
                            LandlordId = 4,
                            NumberOfGuests = 2,
                            PricePerDay = 40f,
                            Rooms = 1,
                            SubTitle = "Affordable and convenient",
                            Title = "Shared House Room",
                            Type = 3
                        },
                        new
                        {
                            Id = 5,
                            Description = "Luxury mansion with private pool",
                            Features = 28,
                            LandlordId = 5,
                            NumberOfGuests = 10,
                            PricePerDay = 450f,
                            Rooms = 5,
                            SubTitle = "Exclusive and luxurious",
                            Title = "Luxury Mansion",
                            Type = 5
                        },
                        new
                        {
                            Id = 6,
                            Description = "Charming townhouse in a historic district",
                            Features = 4,
                            LandlordId = 1,
                            NumberOfGuests = 4,
                            PricePerDay = 90f,
                            Rooms = 2,
                            SubTitle = "Experience the history",
                            Title = "Historic Townhouse",
                            Type = 5
                        },
                        new
                        {
                            Id = 7,
                            Description = "Modern chalet with mountain views",
                            Features = 10,
                            LandlordId = 2,
                            NumberOfGuests = 6,
                            PricePerDay = 200f,
                            Rooms = 3,
                            SubTitle = "Perfect for a getaway",
                            Title = "Mountain Chalet",
                            Type = 2
                        },
                        new
                        {
                            Id = 8,
                            Description = "Cozy studio in the heart of the city",
                            Features = 4,
                            LandlordId = 3,
                            NumberOfGuests = 2,
                            PricePerDay = 60f,
                            Rooms = 1,
                            SubTitle = "Ideal for solo travelers",
                            Title = "City Studio",
                            Type = 0
                        },
                        new
                        {
                            Id = 9,
                            Description = "Spacious house with garden",
                            Features = 34,
                            LandlordId = 4,
                            NumberOfGuests = 8,
                            PricePerDay = 150f,
                            Rooms = 4,
                            SubTitle = "Perfect for families",
                            Title = "Family House",
                            Type = 5
                        },
                        new
                        {
                            Id = 10,
                            Description = "Historic castle with modern amenities",
                            Features = 28,
                            LandlordId = 5,
                            NumberOfGuests = 12,
                            PricePerDay = 350f,
                            Rooms = 6,
                            SubTitle = "Live like royalty",
                            Title = "Modern Castle",
                            Type = 5
                        });
                });

            modelBuilder.Entity("_2024_airbnb_herkansing.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LocationId");

                    b.ToTable("Reservation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            Discount = 0.1f,
                            EndDate = new DateTime(2024, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            StartDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            Discount = 0f,
                            EndDate = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2,
                            StartDate = new DateTime(2024, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            Discount = 0.2f,
                            EndDate = new DateTime(2024, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3,
                            StartDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 1,
                            Discount = 0.15f,
                            EndDate = new DateTime(2024, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4,
                            StartDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 2,
                            Discount = 0.1f,
                            EndDate = new DateTime(2024, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 5,
                            StartDate = new DateTime(2024, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("_2024_airbnb_herkansing.Models.Image", b =>
                {
                    b.HasOne("_2024_airbnb_herkansing.Models.Location", "Location")
                        .WithMany("Images")
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("_2024_airbnb_herkansing.Models.Landlord", b =>
                {
                    b.HasOne("_2024_airbnb_herkansing.Models.Image", "Avatar")
                        .WithOne("Landlord")
                        .HasForeignKey("_2024_airbnb_herkansing.Models.Landlord", "AvatarId");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("_2024_airbnb_herkansing.Models.Location", b =>
                {
                    b.HasOne("_2024_airbnb_herkansing.Models.Landlord", "Landlord")
                        .WithMany("Locations")
                        .HasForeignKey("LandlordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Landlord");
                });

            modelBuilder.Entity("_2024_airbnb_herkansing.Models.Reservation", b =>
                {
                    b.HasOne("_2024_airbnb_herkansing.Models.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId");

                    b.HasOne("_2024_airbnb_herkansing.Models.Location", "Location")
                        .WithMany("Reservations")
                        .HasForeignKey("LocationId");

                    b.Navigation("Customer");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("_2024_airbnb_herkansing.Models.Customer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("_2024_airbnb_herkansing.Models.Image", b =>
                {
                    b.Navigation("Landlord");
                });

            modelBuilder.Entity("_2024_airbnb_herkansing.Models.Landlord", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("_2024_airbnb_herkansing.Models.Location", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
